# Your keymap
#
# Atom keymaps work similarly to style sheets. Just as style sheets use
# selectors to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts. Unlike style sheets however,
# each selector can only be declared once.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# 'atom-text-editor':
#   'enter': 'editor:newline'
#
# 'atom-workspace':
#   'ctrl-shift-p': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#
# You can find more information about keymaps in these guides:
# * https://atom.io/docs/latest/using-atom-basic-customization#customizing-key-bindings
# * https://atom.io/docs/latest/behind-atom-keymaps-in-depth
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# https://atom.io/docs/latest/using-atom-basic-customization#cson
'atom-workspace':
    'ctrl-shift-t': 'todo-show:find-in-open-files'

'atom-text-editor':
    'ctrl-alt-right': 'pane:split-right-and-copy-active-item'
    'ctrl-alt-left': 'pane:split-left-and-copy-active-item'
    'ctrl-alt-d': 'pane:close'
    # Release of ctrl-alt is needed because the up and down variants are
    # already used for symbols-view:go-to-declaration and
    # symbols-view:return-from-declaration.
    'ctrl-alt up': 'pane:split-up-and-copy-active-item'
    'ctrl-alt down': 'pane:split-down-and-copy-active-item'
    # Line sorter.
    'ctrl-alt-s': 'sort-lines:sort'
